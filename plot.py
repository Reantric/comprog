import matplotlib.pyplot as plt
import numpy as np

# Example x and y data points

data = '''2: 0ms
3: 0ms
4: 0ms
5: 0ms
6: 0ms
7: 0ms
8: 0ms
9: 0ms
10: 0ms
11: 0ms
12: 0ms
13: 0ms
14: 0ms
15: 0ms
16: 0ms
17: 0ms
18: 0ms
19: 0ms
20: 0ms
21: 0ms
22: 0ms
23: 0ms
24: 0ms
25: 0ms
26: 0ms
27: 0ms
28: 0ms
29: 0ms
30: 0ms
31: 0ms
32: 0ms
33: 0ms
34: 0ms
35: 0ms
36: 0ms
37: 0ms
38: 0ms
39: 0ms
40: 0ms
41: 0ms
42: 0ms
43: 0ms
44: 0ms
45: 0ms
46: 0ms
47: 0ms
48: 0ms
49: 0ms
50: 1ms
51: 0ms
52: 1ms
53: 0ms
54: 1ms
55: 0ms
56: 1ms
57: 0ms
58: 1ms
59: 0ms
60: 1ms
61: 0ms
62: 1ms
63: 0ms
64: 1ms
65: 0ms
66: 2ms
67: 1ms
68: 2ms
69: 1ms
70: 2ms
71: 1ms
72: 2ms
73: 1ms
74: 3ms
75: 1ms
76: 3ms
77: 1ms
78: 3ms
79: 1ms
80: 3ms
81: 1ms
82: 3ms
83: 1ms
84: 4ms
85: 2ms
86: 4ms
87: 2ms
88: 4ms
89: 2ms
90: 4ms
91: 2ms
92: 4ms
93: 2ms
94: 4ms
95: 2ms
96: 5ms
97: 2ms
98: 5ms
99: 2ms
100: 5ms
101: 2ms
102: 6ms
103: 2ms
104: 10ms
105: 3ms
106: 6ms
107: 3ms
108: 6ms
109: 3ms
110: 7ms
111: 3ms
112: 7ms
113: 3ms
114: 7ms
115: 3ms
116: 7ms
117: 3ms
118: 8ms
119: 3ms
120: 8ms
121: 4ms
122: 8ms
123: 5ms
124: 9ms
125: 4ms
126: 9ms
127: 4ms
128: 9ms
129: 4ms
130: 11ms
131: 5ms
132: 12ms
133: 5ms
134: 12ms
135: 6ms
136: 12ms
137: 6ms
138: 13ms
139: 6ms
140: 14ms
141: 6ms
142: 15ms
143: 7ms
144: 15ms
145: 10ms
146: 18ms
147: 7ms
148: 15ms
149: 7ms
150: 15ms
151: 7ms
152: 16ms
153: 7ms
154: 22ms
155: 8ms
156: 17ms
157: 8ms
158: 19ms
159: 8ms
160: 17ms
161: 8ms
162: 18ms
163: 8ms
164: 18ms
165: 9ms
166: 19ms
167: 9ms
168: 19ms
169: 9ms
170: 21ms
171: 10ms
172: 21ms
173: 13ms
174: 23ms
175: 12ms
176: 23ms
177: 11ms
178: 23ms
179: 11ms
180: 24ms
181: 13ms
182: 22ms
183: 10ms
184: 22ms
185: 11ms
186: 26ms
187: 11ms
188: 24ms
189: 11ms
190: 27ms
191: 11ms
192: 25ms
193: 12ms
194: 26ms
195: 12ms
196: 27ms
197: 17ms
198: 27ms
199: 13ms
200: 36ms
201: 13ms
202: 32ms
203: 13ms
204: 29ms
205: 16ms
206: 30ms
207: 14ms
208: 31ms
209: 14ms
210: 31ms
211: 15ms
212: 32ms
213: 15ms
214: 32ms
215: 16ms
216: 33ms
217: 16ms
218: 34ms
219: 16ms
220: 35ms
221: 17ms
222: 34ms
223: 17ms
224: 36ms
225: 17ms
226: 36ms
227: 18ms
228: 37ms
229: 19ms
230: 43ms
231: 18ms
232: 38ms
233: 18ms
234: 39ms
235: 19ms
236: 40ms
237: 19ms
238: 40ms
239: 19ms
240: 42ms
241: 20ms
242: 50ms
243: 20ms
244: 44ms
245: 21ms
246: 47ms
247: 21ms
248: 45ms
249: 22ms
250: 46ms
251: 23ms
252: 48ms
253: 23ms
254: 48ms
255: 23ms
256: 48ms
257: 23ms
258: 56ms
259: 27ms
260: 57ms
261: 27ms
262: 58ms
263: 28ms
264: 58ms
265: 28ms
266: 59ms
267: 28ms
268: 60ms
269: 29ms
270: 62ms
271: 29ms
272: 61ms
273: 29ms
274: 62ms
275: 30ms
276: 63ms
277: 30ms
278: 65ms
279: 31ms
280: 66ms
281: 31ms
282: 67ms
283: 32ms
284: 68ms
285: 33ms
286: 69ms
287: 34ms
288: 69ms
289: 33ms
290: 70ms
291: 33ms
292: 71ms
293: 34ms
294: 72ms
295: 35ms
296: 73ms
297: 35ms
298: 75ms
299: 35ms
300: 76ms
301: 36ms
302: 80ms
303: 36ms
304: 78ms
305: 37ms
306: 80ms
307: 38ms
308: 81ms
309: 39ms
310: 82ms
311: 39ms
312: 84ms
313: 40ms
314: 82ms
315: 39ms
316: 83ms
317: 40ms
318: 84ms
319: 40ms
320: 85ms
321: 41ms
322: 87ms
323: 41ms
324: 88ms
325: 42ms
326: 89ms
327: 43ms
328: 90ms
329: 43ms
330: 92ms
331: 44ms
332: 93ms
333: 45ms
334: 94ms
335: 45ms
336: 95ms
337: 46ms
338: 97ms
339: 47ms
340: 98ms
341: 48ms
342: 100ms
343: 48ms
344: 101ms
345: 49ms
346: 102ms
347: 49ms
348: 104ms
349: 50ms
350: 105ms
351: 51ms
352: 107ms
353: 52ms
354: 109ms
355: 52ms
356: 110ms
357: 53ms
358: 112ms
359: 54ms
360: 113ms
361: 55ms
362: 114ms
363: 52ms
364: 108ms
365: 52ms
366: 110ms
367: 53ms
368: 111ms
369: 53ms
370: 112ms
371: 54ms
372: 113ms
373: 55ms
374: 115ms
375: 55ms
376: 116ms
377: 56ms
378: 117ms
379: 57ms
380: 120ms
381: 58ms
382: 121ms
383: 58ms
384: 123ms
385: 60ms
386: 124ms
387: 60ms
388: 125ms
389: 60ms
390: 127ms
391: 61ms
392: 128ms
393: 62ms
394: 130ms
395: 63ms
396: 130ms
397: 63ms
398: 132ms
399: 64ms
400: 135ms
401: 65ms
402: 136ms
403: 66ms
404: 138ms
405: 67ms
406: 138ms
407: 67ms
408: 140ms
409: 68ms
410: 143ms
411: 68ms
412: 143ms
413: 69ms
414: 145ms
415: 70ms
416: 148ms
417: 71ms
418: 150ms
419: 72ms
420: 153ms
421: 73ms
422: 153ms
423: 74ms
424: 155ms
425: 75ms
426: 155ms
427: 75ms
428: 156ms
429: 76ms
430: 159ms
431: 77ms
432: 161ms
433: 78ms
434: 162ms
435: 79ms
436: 165ms
437: 79ms
438: 165ms
439: 81ms
440: 169ms
441: 82ms
442: 169ms
443: 82ms
444: 168ms
445: 82ms
446: 169ms
447: 83ms
448: 173ms
449: 84ms
450: 174ms
451: 85ms
452: 175ms
453: 86ms
454: 177ms
455: 87ms
456: 179ms
457: 87ms
458: 182ms
459: 89ms
460: 183ms
461: 89ms
462: 184ms
463: 90ms
464: 186ms
465: 90ms
466: 188ms
467: 91ms
468: 189ms
469: 92ms
470: 190ms
471: 93ms
472: 194ms
473: 94ms
474: 195ms
475: 95ms
476: 198ms
477: 96ms
478: 200ms
479: 97ms
480: 202ms
481: 98ms
482: 204ms
483: 99ms
484: 206ms
485: 100ms
486: 207ms
487: 101ms
488: 210ms
489: 102ms
490: 211ms
491: 103ms
492: 215ms
493: 105ms
494: 217ms
495: 106ms
496: 220ms
497: 107ms
498: 221ms
499: 107ms
500: 224ms
501: 109ms
502: 226ms
503: 110ms
504: 229ms
505: 112ms
506: 231ms
507: 112ms
508: 234ms
509: 114ms
510: 235ms
511: 115ms
512: 233ms
513: 112ms
514: 264ms
515: 127ms
516: 265ms
517: 127ms
518: 267ms
519: 128ms
520: 270ms
521: 129ms
522: 272ms
523: 131ms
524: 274ms
525: 132ms
526: 277ms
527: 133ms
528: 278ms
529: 133ms
530: 280ms
531: 134ms
532: 282ms
533: 135ms
534: 285ms
535: 137ms
536: 289ms
537: 138ms
538: 291ms
539: 139ms
540: 294ms
541: 140ms
542: 296ms
543: 142ms
544: 294ms
545: 141ms
546: 296ms
547: 142ms
548: 298ms
549: 143ms
550: 300ms
551: 145ms
552: 303ms
553: 146ms
554: 305ms
555: 147ms
556: 307ms
557: 148ms
558: 311ms
559: 150ms
560: 313ms
561: 151ms
562: 316ms
563: 152ms
564: 318ms
565: 153ms
566: 322ms
567: 155ms
568: 325ms
569: 157ms
570: 328ms
571: 158ms
572: 330ms
573: 160ms
574: 326ms
575: 156ms
576: 330ms
577: 157ms
578: 332ms
579: 158ms
580: 335ms
581: 160ms
582: 337ms
583: 161ms
584: 339ms
585: 162ms
586: 341ms
587: 163ms
588: 344ms
589: 164ms
590: 347ms
591: 166ms
592: 349ms
593: 167ms
594: 354ms
595: 168ms
596: 356ms
597: 169ms
598: 358ms
599: 171ms
600: 361ms
601: 172ms
602: 364ms
603: 174ms
604: 367ms
605: 175ms
606: 368ms
607: 176ms
608: 373ms
609: 178ms
610: 375ms
611: 179ms
612: 378ms
613: 180ms
614: 383ms
615: 183ms
616: 385ms
617: 184ms
618: 388ms
619: 186ms
620: 391ms
621: 188ms
622: 394ms
623: 189ms
624: 399ms
625: 191ms
626: 400ms
627: 191ms
628: 392ms
629: 189ms
630: 393ms
631: 189ms
632: 395ms
633: 190ms
634: 400ms
635: 193ms
636: 401ms
637: 193ms
638: 404ms
639: 195ms
640: 407ms
641: 197ms
642: 409ms
643: 197ms
644: 412ms
645: 198ms
646: 414ms
647: 201ms
648: 417ms
649: 202ms
650: 421ms
651: 203ms
652: 423ms
653: 205ms
654: 426ms
655: 205ms
656: 429ms
657: 207ms
658: 431ms
659: 208ms
660: 436ms
661: 211ms
662: 438ms
663: 213ms
664: 442ms
665: 213ms
666: 443ms
667: 214ms
668: 446ms
669: 216ms
670: 449ms
671: 217ms
672: 454ms
673: 219ms
674: 456ms
675: 220ms
676: 460ms
677: 222ms
678: 465ms
679: 224ms
680: 465ms
681: 225ms
682: 470ms
683: 227ms
684: 475ms
685: 230ms
686: 476ms
687: 231ms
688: 481ms
689: 233ms
690: 482ms
691: 232ms
692: 485ms
693: 234ms
694: 489ms
695: 235ms
696: 493ms
697: 238ms
698: 494ms
699: 240ms
700: 498ms
701: 241ms
702: 503ms
703: 243ms
704: 506ms
705: 245ms
706: 508ms
707: 247ms
708: 514ms
709: 248ms
710: 518ms
711: 250ms
712: 519ms
713: 252ms
714: 524ms
715: 254ms
716: 528ms
717: 255ms
718: 530ms
719: 256ms
720: 535ms
721: 259ms
722: 537ms
723: 260ms
724: 540ms
725: 248ms
726: 518ms
727: 249ms
728: 517ms
729: 249ms
730: 523ms
731: 252ms
732: 524ms
733: 253ms
734: 527ms
735: 254ms
736: 531ms
737: 256ms
738: 532ms
739: 257ms
740: 534ms
741: 258ms
742: 539ms
743: 260ms
744: 541ms
745: 262ms
746: 543ms
747: 264ms
748: 550ms
749: 266ms
750: 550ms
751: 265ms
752: 556ms
753: 268ms
754: 558ms
755: 269ms
756: 560ms
757: 270ms
758: 567ms
759: 273ms
760: 570ms
761: 275ms
762: 571ms
763: 276ms
764: 577ms
765: 279ms
766: 580ms
767: 280ms
768: 587ms
769: 283ms
770: 589ms
771: 284ms
772: 591ms
773: 285ms
774: 594ms
775: 286ms
776: 598ms
777: 288ms
778: 601ms
779: 291ms
780: 605ms
781: 292ms
782: 607ms
783: 293ms
784: 613ms
785: 295ms
786: 616ms
787: 297ms
788: 620ms
789: 299ms
790: 621ms
791: 300ms
792: 624ms
793: 302ms
794: 627ms
795: 304ms
796: 632ms
797: 305ms
798: 635ms
799: 307ms
800: 647ms
801: 312ms
850: 748ms
851: 382ms
900: 852ms
901: 409ms
998: 1094ms
999: 521ms
1000: 1097ms
1100: 1447ms
1101: 688ms
1200: 1738ms
1201: 856ms
1300: 2116ms
1301: 958ms
1400: 2331ms
1401: 1128ms
1500: 2588ms
1501: 1251ms
1600: 3014ms
1601: 1462ms
1700: 3447ms
1701: 1674ms
1900: 4482ms
1901: 2144ms
2000: 4973ms
2001: 2426ms
2200: 6564ms
2201: 3165ms
2400: 7830ms
2401: 3760ms
2499: 4136ms
2500: 8616ms
2700: 10026ms
2701: 4846ms
2999: 5849ms
3000: 12068ms
3999: 11153ms
4000: 22995ms
4401: 14626ms
5501: 23176ms
6501: 32066ms
'''

data2 = '''2: 0
3: 0
4: 0
5: 0
6: 0
7: 0
8: 0
9: 0
10: 0
11: 0
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 0
22: 0
23: 0
24: 0
25: 0
26: 0
27: 0
28: 0
29: 0
30: 0
31: 0
32: 0
33: 0
34: 0
35: 0
36: 0
37: 0
38: 0
39: 0
40: 0
41: 0
42: 0
43: 0
44: 0
45: 0
46: 0
47: 0
48: 0
49: 0
50: 0
51: 0
52: 0
53: 0
54: 0
55: 0
56: 0
57: 0
58: 0
59: 0
60: 0
61: 0
62: 0
63: 0
64: 0
65: 0
66: 0
67: 0
68: 0
69: 0
70: 0
71: 0
72: 0
73: 0
74: 0
75: 0
76: 0
77: 0
78: 0
79: 0
80: 0
81: 0
82: 0
83: 0
84: 0
85: 0
86: 0
87: 0
88: 0
89: 0
90: 0
91: 0
92: 0
93: 0
94: 0
95: 0
96: 0
97: 0
98: 0
99: 0
100: 1
101: 0
102: 0
103: 0
104: 1
105: 1
106: 1
107: 1
108: 1
109: 1
110: 1
111: 1
112: 1
113: 1
114: 1
115: 1
116: 1
117: 1
118: 1
119: 1
120: 1
121: 1
122: 1
123: 1
124: 1
125: 1
126: 1
127: 1
128: 1
129: 1
130: 1
131: 1
132: 1
133: 1
134: 1
135: 1
136: 2
137: 2
138: 2
139: 2
140: 2
141: 2
142: 2
143: 2
144: 2
145: 2
146: 2
147: 2
148: 2
149: 2
150: 2
151: 2
152: 2
153: 2
154: 2
155: 2
156: 3
157: 3
158: 3
159: 3
160: 3
161: 3
162: 3
163: 3
164: 3
165: 3
166: 3
167: 3
168: 3
169: 3
170: 3
171: 3
172: 4
173: 4
174: 4
175: 4
176: 4
177: 4
178: 4
179: 4
180: 4
181: 4
182: 4
183: 4
184: 4
185: 5
186: 5
187: 5
188: 5
189: 5
190: 5
191: 5
192: 5
193: 5
194: 5
195: 5
196: 5
197: 6
198: 6
199: 6
200: 6
201: 6
202: 6
203: 6
204: 6
205: 6
206: 6
207: 6
208: 7
209: 7
210: 7
211: 7
212: 7
213: 7
214: 7
215: 7
216: 7
217: 8
218: 8
219: 8
220: 8
221: 8
222: 8
223: 8
224: 8
225: 9
226: 9
227: 9
228: 9
229: 9
230: 9
231: 9
232: 9
233: 9
234: 10
235: 10
236: 10
237: 10
238: 10
239: 10
240: 10
241: 11
242: 11
243: 11
244: 11
245: 11
246: 11
247: 11
248: 11
249: 12
250: 12
251: 12
252: 12
253: 12
254: 12
255: 13
256: 13
257: 13
258: 13
259: 13
260: 14
261: 14
262: 14
263: 14
264: 14
265: 14
266: 14
267: 14
268: 15
269: 15
270: 15
271: 15
272: 15
273: 16
274: 16
275: 16
276: 16
277: 16
278: 16
279: 17
280: 17
281: 17
282: 17
283: 17
284: 17
285: 18
286: 18
287: 18
288: 18
289: 18
290: 19
291: 19
292: 19
293: 19
294: 19
295: 20
296: 20
297: 20
298: 20
299: 20
300: 21
301: 21
302: 21
303: 21
304: 22
305: 22
306: 22
307: 22
308: 22
309: 23
310: 24
311: 24
312: 24
313: 23
314: 24
315: 24
316: 24
317: 24
318: 25
319: 25
320: 25
321: 25
322: 26
323: 26
324: 26
325: 26
326: 26
327: 27
328: 27
329: 27
330: 28
331: 28
332: 28
333: 28
334: 29
335: 29
336: 29
337: 30
338: 30
339: 30
340: 30
341: 31
342: 31
343: 31
344: 31
345: 32
346: 32
347: 32
348: 32
349: 33
350: 33
351: 33
352: 34
353: 34
354: 34
355: 34
356: 35
357: 35
358: 35
359: 35
360: 36
361: 36
362: 36
363: 37
364: 37
365: 38
366: 38
367: 38
368: 39
369: 39
370: 39
371: 39
372: 40
373: 40
374: 40
375: 41
376: 42
377: 42
378: 42
379: 42
380: 43
381: 43
382: 43
383: 43
384: 44
385: 45
386: 44
387: 45
388: 46
389: 46
390: 46
391: 47
392: 47
393: 47
394: 47
395: 48
396: 48
397: 49
398: 49
399: 49
400: 50
401: 50
402: 51
403: 51
404: 51
405: 52
406: 52
407: 52
408: 52
409: 53
410: 53
411: 54
412: 54
413: 55
414: 55
415: 55
416: 56
417: 57
418: 56
419: 57
420: 57
421: 58
422: 58
423: 59
424: 60
425: 60
426: 60
427: 60
428: 61
429: 61
430: 61
431: 62
432: 62
433: 63
434: 63
435: 64
436: 64
437: 64
438: 65
439: 65
440: 66
441: 66
442: 67
443: 67
444: 68
445: 68
446: 68
447: 69
448: 69
449: 70
450: 70
451: 71
452: 72
453: 72
454: 72
455: 73
456: 73
457: 74
458: 74
459: 75
460: 75
461: 76
462: 76
463: 76
464: 77
465: 78
466: 78
467: 79
468: 79
469: 80
470: 80
471: 80
472: 81
473: 82
474: 82
475: 83
476: 83
477: 84
478: 84
479: 85
480: 86
481: 86
482: 86
483: 87
484: 88
485: 88
486: 89
487: 89
488: 90
489: 91
490: 91
491: 91
492: 92
493: 93
494: 93
495: 93
496: 94
497: 95
498: 95
499: 96
500: 97
501: 97
502: 97
503: 98
504: 99
505: 100
506: 100
507: 101
508: 102
509: 102
510: 102
511: 103
512: 104
513: 104
514: 105
515: 105
516: 106
517: 107
518: 107
519: 108
520: 109
521: 109
522: 110
523: 110
524: 111
525: 112
526: 112
527: 113
528: 114
529: 114
530: 115
531: 115
532: 116
533: 117
534: 117
535: 118
536: 119
537: 120
538: 120
539: 121
540: 122
541: 122
542: 123
543: 124
544: 124
545: 125
546: 125
547: 126
548: 127
549: 128
550: 128
551: 129
552: 130
553: 131
554: 131
555: 132
556: 133
557: 134
558: 134
559: 135
560: 135
561: 136
562: 137
563: 138
564: 139
565: 139
566: 140
567: 140
568: 143
569: 143
570: 142
571: 144
572: 144
573: 145
574: 146
575: 147
576: 148
577: 148
578: 149
579: 149
580: 151
581: 151
582: 152
583: 153
584: 154
585: 155
586: 155
587: 156
588: 157
589: 158
590: 158
591: 159
592: 160
593: 161
594: 161
595: 162
596: 164
597: 164
598: 165
599: 166
600: 167
601: 168
602: 168
603: 169
604: 171
605: 171
606: 171
607: 172
608: 174
609: 174
610: 175
611: 176
612: 177
613: 178
614: 178
615: 179
616: 181
617: 182
618: 182
619: 183
620: 184
621: 185
622: 186
623: 186
624: 188
625: 189
626: 189
627: 190
628: 191
629: 192
630: 193
631: 194
632: 195
633: 196
634: 197
635: 198
636: 199
637: 200
638: 200
639: 201
640: 203
641: 204
642: 204
643: 205
644: 206
645: 207
646: 208
647: 208
648: 211
649: 211
650: 211
651: 213
652: 214
653: 215
654: 215
655: 217
656: 218
657: 219
658: 220
659: 221
660: 222
661: 223
662: 224
663: 225
664: 226
665: 229
666: 228
667: 229
668: 230
669: 232
670: 232
671: 233
672: 234
673: 235
674: 236
675: 237
676: 238
677: 239
678: 240
679: 240
680: 243
681: 244
682: 245
683: 245
684: 247
685: 248
686: 249
687: 250
688: 252
689: 253
690: 253
691: 255
692: 256
693: 257
694: 257
695: 258
696: 260
697: 261
698: 262
699: 264
700: 265
701: 266
702: 267
703: 268
704: 270
705: 271
706: 271
707: 272
708: 274
709: 275
710: 275
711: 277
712: 279
713: 280
714: 280
715: 282
716: 283
717: 284
718: 285
719: 286
720: 288
721: 290
722: 290
723: 291
724: 293
725: 294
726: 295
727: 296
728: 298
729: 299
730: 299
731: 301
732: 303
733: 304
734: 304
735: 306
736: 309
737: 309
738: 310
739: 311
740: 313
741: 314
742: 314
743: 316
744: 318
745: 319
746: 320
747: 324
748: 327
749: 327
750: 327
751: 328
752: 332
753: 330
800: 399
850: 476
900: 564
950: 662
1000: 775
1050: 894
1100: 1031
1150: 1175
1200: 1337
1250: 1509
1300: 1699
1350: 1898
1400: 2124
1450: 2353
1500: 2609
1550: 2880
1600: 3166
1650: 3473
1700: 3798
1750: 4133
1800: 4502
1920: 5460
2040: 6575
2160: 7767
2280: 9127
2400: 10624
2400: 10631
2651: 14317
2902: 18716
4000: 48807
'''

lines = data.strip().split("\n")
x_data = []
y_data = []

for line in lines:
    parts = line.split(": ")
    x_data.append(int(parts[0]))  # Left number as integer
    y_data.append(int(parts[1].replace("ms", "")))  # Time in ms as integer


lines = data2.strip().split("\n")
x_data2 = []
y_data2 = []

for line in lines:
    parts = line.split(": ")
    x_data2.append(int(parts[0]))  # Left number as integer
    y_data2.append(int(parts[1]))  # Time in ms as integer


# Function for n^2 log^2(n)
def n_squared_log_squared(n,c):
    return c*n**2 * np.log(n)**2

def n_cubed(n,c):
    return c*n**3

# Generate a range of x values for plotting the function
x_range = np.linspace(1, 6500, 3500)  # Adjust the range as needed
y_function = n_squared_log_squared(x_range,0.00001)
y_function2 = n_squared_log_squared(x_range,0.00002)

# Create the plot
plt.figure(figsize=(8, 6))

# Plot the x, y data points
plt.scatter(x_data, y_data, color='blue', label='Divide and conquer FFT')

# Plot the n^2 log^2(n) function
plt.plot(x_range, y_function, color='red', label='$n^2 \log^2(n)$')
plt.plot(x_range, y_function2, color='red', label='$n^2 \log^2(n)$')


plt.scatter(x_data2, y_data2, color='green', label='Magic snow')
x_range = np.linspace(1, 6500, 3500)  # Adjust the range as needed
y_function = n_cubed(x_range,0.00000075)
plt.plot(x_range, y_function, color='purple', label='$n^3$')

# Adding labels and title
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Graph of Data Points and $n^2 \log^2(n)$')
plt.legend()
#plt.xlim(0, 2000)
#plt.ylim(0,8000)
# Show the plot
plt.show()
